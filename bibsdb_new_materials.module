<?php
/**
 * @file
 * Drupal needs this blank file.
 */

/*
 * Implements hook_ctools_plugin_directory().
 */
function bibsdb_new_materials_ctools_plugin_directory($owner, $plugin_type) {
 if ($owner == 'ctools' && $plugin_type == 'content_types') {
   return 'plugins/' . $plugin_type;
 }
}

/*
 * Public: Implements hook_form_FORM_ID_alter.
 *
 */
function bibsdb_new_materials_form_node_form_alter(&$form, $form_state) {
  $type = $form['#node']->type;

  if ('new_materials' == $type) {

  	// Hide field_ddelibra_search
  	$form['field_ddelibra_search']['#access'] = FALSE;

  	// Move up field_bibsdb_new_materials_image
  	$form['field_bibsdb_new_materials_image']['#weight'] = 2;
  }
}

/**
 * Public: Implements hook_ting_search_context_field_name().
 */
function bibsdb_new_materials_ting_search_context_field_name() {
  return array(
    'new_materials' => 'field_bibsdb_new_materials_image',
    );
}


/**
 * Implements hook_image_styles_alter().
 * Change size of ting_new_materials_cover 
 * 
 * @param $styles
 */
function bibsdb_new_materials_image_styles_alter(&$styles) {

  if (function_exists('image_image_effect_info')) {
    // Init the effect data.
   $effects = image_image_effect_info();
   $scale_effect = $effects['image_scale_and_crop'];
   $scale_effect['data'] = array();
   $scale_effect['weight'] = 0;

    // Store styles data.
   $styles_data = array(
     'ting_new_materials_cover' => array(
       'width' => 148,
       'height' => 214,
       ),
     );

   foreach ($styles_data as $style_name => $data) {
      // Check that we only affect a default style.
     if ($styles[$style_name]['storage'] == IMAGE_STORAGE_DEFAULT) {
       $scale_effect['data'] = $data;
       $styles[$style_name]['effects'] = array();
       $styles[$style_name]['effects'][] = $scale_effect;
     }
   }
 }
}

/**
 * Implements hook_panels_pane_content_alter().
 * Append the more link to the end of the new materials list
 * 
 * @param $styles
 */
function bibsdb_new_materials_panels_pane_content_alter(&$content, &$pane, &$args, &$contexts) {
  if ($content->type == 'new_materials') {
    // Get the node.
    $node = reset($contexts)->data;
    $node_wrapper = entity_metadata_wrapper('node', $node);

      // If covers a shown we need a more-link
    $covers_mode = $node_wrapper->field_ting_new_materials_covers->value();

    if ($covers_mode) {

      // Fetch the query from the new_materials
      $query = $node_wrapper->field_ting_new_materials_search->value();

      // Create the link
      $link = array(
        '#type'  => 'link',
        '#title' => "Se flere forslag",
        '#href'  => "/search/ting/" . $query,
        '#options' => array('query' => array('page' => '2')),
        );

      $snippet = array(
        'snippet' => drupal_render($link),
        );

       // Add to block content
      array_push($content->content['#results']['#results'], $snippet);
    }
  }
}